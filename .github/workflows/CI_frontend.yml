# worflow for building the front end

name: "React frotend CI" # the name of the job when ran

# events that will trigger this workflow to run
on: 
  push:
    branches: [ "main", "develop"]
    paths: # only trigger if changes in this paths
      - 'frontend/**'
  pull_request:
    branches: [ "main", "develop"]
    paths:
      - 'frontend/**'
env:
  node_version: 22.x
  artifact: artifact-frontend
defaults:
  run:
      working-directory: ./frontend

# run in parallel by default
# can be multiple jobs
# cannot share machines between jobs so either steps or need to check out in each job
jobs:
    build: # first job
        runs-on: ubuntu-latest # the "worker node" where it's going to be build
        outputs:
          artifact: ${{ env.artifact }}
        steps:
            - name: Check out code
              uses: actions/checkout@v4.1.7 # action

            - name: Use Node.js ${{ env.node_version }}
              uses: actions/setup-node@v4.0.3 # action
              with:
                node-version: ${{ env.node_version }}
                cache: 'npm'
                cache-dependency-path: './frontend/package-lock.json'
            
            - name: Run npm clean install
              run: npm ci

              # can have or not a name
            - run: npm run build --if-present

            - if: ${{ inputs.externall_call }}
              name: Archive artifact
              uses: actions/upload-artifact@v4
              with:
                name: ${{ env.artifact }}
                path: |
                  /home/runner/work/gh-actions-workflow/gh-actions-workflow/frontend/dist/frontend
                retention-days: 1
                if-no-files-found: error

    # test job
    test:
      needs: build
      runs-on: ubuntu-latest # the "worker node" where it's going to be build
      steps:
        - name: Check out code
          uses: actions/checkout@v4.1.7 # action

        - name: Use Node.js ${{ env.node_version }}
          uses: actions/setup-node@v4.0.3 # action
          with:
            node-version: ${{ env.node_version }}
            cache: 'npm'
            cache-dependency-path: './frontend/package-lock.json'
        - name: "Run test on frontend"
          run: npm ci
        - run: npm test